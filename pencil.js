// Generated by CoffeeScript 1.6.2
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  drawbone.tools.Pencil = (function(_super) {
    __extends(Pencil, _super);

    function Pencil() {
      _ref = Pencil.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    Pencil.prototype.initialize = function(options) {
      this.canvas = options.canvas;
      this.context = this.canvas.getContext('2d');
      return this.started = false;
    };

    Pencil.prototype.render = function() {
      return this;
    };

    Pencil.prototype.mousedown = function(event) {
      this.context.beginPath();
      this.context.moveTo(event._x, event._y);
      return this.started = true;
    };

    Pencil.prototype.mousemove = function(event) {
      if (this.started) {
        this.context.lineTo(event._x, event._y);
        return this.context.stroke();
      }
    };

    Pencil.prototype.mouseup = function(event) {
      if (this.started) {
        this.mousemove(event);
        this.started = false;
        return this.trigger('toolDidCompleteDrawing');
      }
    };

    return Pencil;

  })(Backbone.View);

}).call(this);
